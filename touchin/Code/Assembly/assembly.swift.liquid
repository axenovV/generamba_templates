import Swinject

class {{ module_info.name }}Assembly: Assembly {

    static let assembler = Assembler([{{ module_info.name }}Assembly()])

    static var resolver: Resolver {
        return assembler.resolver
    }

    func assemble(container: Container) {
        container.register({{ module_info.name }}ViewModel.self) { _ in {{ module_info.name }}ViewModel() }

        container.register({{ module_info.name }}ViewController.self) { r in
            {% assign storyboardEnum = {{ module_info.name | remove_first: module_info.name.first }} %}
            let viewController: {{ module_info.name }}ViewController = UIStoryboard(storyboard: .{{ module_info.name.first | downcase | append: storyboardEnum }}).instantiateViewController()
            viewController.viewModel = r.resolve({{ module_info.name }}ViewModel.self)
            return viewController
        }
    }

}
